@using TextShare.Domain.Models.EntityModels.FriendsModels
@model FriendSearchResultModel

<ul class="list-group">
    @foreach (var user in Model.ResultSearch)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            <div>
                <a href="@Url.Action("DetailsUserByUserName", "User", new { username = user.UserName })" class="d-flex align-items-center">
                @if (!string.IsNullOrEmpty(user.AvatarUri))
                {
                    <img src="@user.AvatarUri" alt="Avatar" class="rounded-circle"
                         style="width: 50px; height: 50px; object-fit: cover; margin-right: 10px;">
                }
                <div>
                    <strong>@user.UserName</strong>
                        <p style="padding-right: 50px;">@user.FirstName @user.LastName</p>
                </div>
                </a>
            </div>
            <div>
                
                @if (Model.Friends.Any(f => f.Id == user.Id))
                {
                    <!-- Удалить -->
                    <a href="@Url.Action("DeleteFriend", "Friends", new { id = user.Id })"
                       class="btn btn-danger btn-sm">Удалить</a>
                }
                else if (Model.FriendRequests.Any(f => f.Id == user.Id))
                {
                    <!-- Принять заявку -->
                    <a href="@Url.Action("AcceptFriendRequest", "Friends", new { id = user.Id })"
                       class="btn btn-success btn-sm">✅ Принять заявку</a>
                    <a href="@Url.Action("DeleteFriend", "Friends", new { id = user.Id })"
                       class="btn btn-danger btn-sm">Удалить</a>
                }
                else
                {
                    <!-- Добавить в друзья -->
                    <a href="@Url.Action("SendFriendRequest", "Friends", new { id = user.Id })"
                       class="btn btn-primary btn-sm">➕ Добавить</a>
                }
            </div>
        </li>
    }
</ul>